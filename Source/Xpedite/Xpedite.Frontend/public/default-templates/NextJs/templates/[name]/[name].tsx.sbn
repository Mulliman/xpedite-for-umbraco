import { TypedUmbracoNode } from "@/umbraco/types";

import './{{name.value}}.css'

export type {{ name.pascal_case }}Props = { {{ for prop in properties }}
    {{ prop.alias }}?: any,{{ end }}
}

export default function {{ name.pascal_case }} (currentPage : TypedUmbracoNode<{{ name.pascal_case }}Props>) {
    const { {{ for prop in properties }}{{ prop.alias }},{{ end }} } = currentPage?.properties;

    return (
        <div className="template-{{ name.kebab_case }}">
            <div className="template-{{ name.kebab_case }}-name">Template: {{ name.pascal_case }}</div>
        {{ for renderedProperty in rendered_properties }}
        {{ renderedProperty }}{{ end }}
        </div>
    )
}

// TODO: Add template to the templatesMap in templates.ts with value -> {{name.camel_case}}: lazy(() => import('./{{name.value}}')),